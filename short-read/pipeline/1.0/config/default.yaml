


conda_envs:
    bwa: "{MODSDIR}/envs/bwa-0.7.17.yaml"
    samtools: "{MODSDIR}/envs/samtools-1.9.yaml"
            
threads:
    bwa_mem: 4
            samtools: 1


# filepath of the reference genome in FASTA format
genome: data/fasta/chr22.fasta


# filepath of the exclusion list in BED format
exclusion_list: data/ENCFF001TDO.bed
exclude_regions: 1 # use the list (1) or don't (0)



# settings or requirements per SV caller
callers:
  manta:
    threads: 24         # number of threads used
    memory: 16384       # allocated memory (MB)
    tmpspace: 0         # min. temporary disk space (MB); not in use by Manta
    outdir: manta_out   # output dir relative to PATH/SAMPLE/... (see above)
    tumor_only: 0       # germline (0) or tumor-only analysis (1)

  delly:
    threads: 2  # max. 2 for paired-samples otherwise defaults to 1
    memory: 8192
    tmpspace: 0  # not in use
    outdir: delly_out
    sv_types:
        - BND  # translocation
        - DEL  # deletion
        - DUP  # duplication
        - INS  # insertion
        - INV  # inversion

  lumpy:
    threads: 1  # multi-threading not supported
    memory: 32768
    tmpspace: 0  # e.g., 10240
    outdir: lumpy_out

  gridss:
    threads: 24
    memory: 63488
    tmpspace: 0  # e.g., 102400
    outdir: gridss_out


postproc:
  survivor:
    threads: 1
    memory: 1024
    tmpspace: 0  # not in use
    outdir: survivor
    filter:         # filter SVs using a BED file (see 'exclusion_list')
      min_size: -1  # min. SV size (-1 to disable)
      max_size: -1  # max. SV size (-1 to disable)
      min_freq: 0   # min. allele frequency (0 or 1)
      min_sup: -1   # min. number of reads support: RE flag (-1 to disable)

    merge:             # merge callers' output into one (union) SV set
      infile: all.txt  # list of VCF files
      max_dist: 100    # max. distance (bp) between breakpoints
      min_sup: 1       # min. number of supporting callers
      use_type: 0      # take SV type into account (1=yes or 0=no)
      use_strand: 0    # take the strands of SVs into account (1=yes or 0=no)
      use_size: 0      # estimate distance based on SV size (1=yes or 0=no)
      min_size: 0      # min. SV size (bp)
      outfile: all.vcf